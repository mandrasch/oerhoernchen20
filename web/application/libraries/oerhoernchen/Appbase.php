<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Appbase {

	public function __construct() {

		$this->CI = &get_instance();

	}

	private function store_entry_log_in_database($elastic_id, $oerhoernchen_id, $json_object_data, $imgur_url, $imgur_delete_hash, $user_id, $time) {

		$data = array(
			'oerhoernchen_id' => $oerhoernchen_id,
			'elastic_id' => $elastic_id,
			'imgur_url' => filter_var($imgur_url, FILTER_SANITIZE_STRING),
			'imgur_delete_hash' => filter_var($imgur_delete_hash, FILTER_SANITIZE_STRING),
			'user_id' => $user_id,
			'time' => $time,
			'json_object' => $json_object_data,
		);
		$this->CI->db->insert('oerh_log_submitted_entries', $data);
		// 2DO: error handling
	}

	public function publish_to_index_and_log_in_database($index, $sanitized_object_data, $user_id, $imgur_url, $imgur_delete_hash, $time) {

		log_message('debug', "Publish to index start");

		$curl = curl_init();

		//$json = file_get_contents('import_data_multiple.json');
		// 2DO: better security, do not take post!
		//Decode JSON
		//$jsonObj = json_decode($json,true);

		// POST WITHOUT ID, autogenerated id

		$this->CI->config->load('appbase');

		switch ($index) {
		case 'official':
		case 'github':
		case 'playground':
			$appbase_auth_string = $this->CI->config->item('appbase_auth_string_write_' . $index);
			$appbase_api_url = $this->CI->config->item('appbase_api_url_official') . '/' . $this->CI->config->item('appbase_app_name_' . $index) . '/_doc/';
			break;
		default:
			show_error('Unexpected index value', 500);
			break;
		}

		// add oerhoernchen_id to new entry object
		$object_without_oerhoernchen_id = $sanitized_object_data;
		$oerhoernchen_id = uniqid(rand(), true);
		$sanitized_object_data->oerhoernchen_id = $oerhoernchen_id;
		$json_data = json_encode($sanitized_object_data);

		log_message('debug', 'Try to publish to index ' . $index);
		log_message('debug', 'URL: ' . $appbase_api_url);
		log_message('debug', 'Appbase auth string has length: ' . strlen($appbase_auth_string));

		curl_setopt_array($curl, array(
			CURLOPT_URL => $appbase_api_url,
			CURLOPT_RETURNTRANSFER => true,
			CURLOPT_ENCODING => "",
			CURLOPT_MAXREDIRS => 10,
			CURLOPT_TIMEOUT => 30,
			CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
			CURLOPT_CUSTOMREQUEST => "POST",
			CURLOPT_POSTFIELDS => $json_data,
			CURLOPT_HTTPHEADER => array(
				"Authorization: Basic " . base64_encode($appbase_auth_string) . "",
				"Content-Type: application/json",
			),
		));

		$responseAppbaseRaw = curl_exec($curl);
		$responseAppbaseDecoded = json_decode($responseAppbaseRaw);
		$err = curl_error($curl);
		curl_close($curl);

		if ($err) {
			//echo "cURL Error #:" . $err;

			log_message('error', 'CURL ERROR' . print_r($responseAppbaseRaw, true));
			return false;

			/*return $this->output->
				set_content_type('application/json')->
				set_status_header(200)
				->set_output($responseAppbaseRaw);*/
			// 2DO: return response.success = false and log error internally!

		} elseif (isset($responseAppbaseDecoded->_id)) {
			// json_decode($responseAppbase, true);

			log_message('debug', 'CURL SUCCESS, got back an id: ' . $responseAppbaseDecoded->_id);

			$elastic_id = $responseAppbaseDecoded->_id;

			//2DO: check if result == created
			// $response['result'] = $responseAppbaseDecoded->result;

			//$response = array();
			// 2DO: only return some fields due to security reasons?
			//$response['success'] = true;
			//$response['elastic_id'] = $responseAppbaseDecoded->_id;
			//$response['result'] = $responseAppbaseDecoded->result;
			// 2DO: check if this is created, otherwise error

			// store (private) data in our database
			if ($index == 'official') {
				$this->store_entry_log_in_database($elastic_id, $oerhoernchen_id, json_encode($object_without_oerhoernchen_id), $imgur_url, $imgur_delete_hash, $user_id, $time);
			}
			return $oerhoernchen_id;
			//return $elastic_id;

			/*return $this->output->
				set_content_type('application/json')->
				set_status_header(200)
				->set_output(json_encode($response));*/
		} else {
			log_message('error', 'Unexpected response from curl' . print_r($responseAppbaseRaw, true));
			return false;
		}

	}
}